version: '3.8'

services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: esther
      MINIO_ROOT_PASSWORD: estheresther
    networks:
      - lakehouse-nw
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
  spark-iceberg:
      image: tabulario/spark-iceberg:latest
      container_name: spark-iceberg
      build: spark/
      networks:
        - lakehouse-nw
      depends_on:
        - rest
        - minio
      volumes:
        - ./iceberg:/home/iceberg/warehouse
        - ./iceberg/src:/home/iceberg/notebooks/notebooks
      environment:
        - AWS_ACCESS_KEY_ID=esther
        - AWS_SECRET_ACCESS_KEY=estheresther
        - AWS_REGION=local
        - AWS_DEFAULT_REGION=local
      ports:
        - 8888:8888
        - 8080:8080
        - 10000:10000
        - 10001:10001
  rest:
    image: tabulario/iceberg-rest:latest
    container_name: iceberg-rest
    networks:
      - lakehouse-nw
    ports:
      - 8181:8181
    environment:
      - AWS_ACCESS_KEY_ID=esther
      - AWS_SECRET_ACCESS_KEY=estheresther
      - AWS_REGION=local
      - AWS_DEFAULT_REGION=local
      - CATALOG_WAREHOUSE=s3://iceberg/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
  # delta-app:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   container_name: delta-app
  #   networks:
  #     - lakehouse-nw
  #   volumes:
  #     - ./delta_lake/src:/src
  #   entrypoint: ["python3","/src/acid.py"]

volumes:
  minio-data:

networks:
  lakehouse-nw:
    driver: bridge

